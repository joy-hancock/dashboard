/* Root/theme styles */
:root {
  /* Colors */
  --clr-white: #fff;
  --clr-background: #f5f5f5;
  --clr-background-dark: #999;

  --clr-text-light: #777;
  --clr-text: #000;

  --clr-accent-bg: #d5d6ea;
  --clr-accent-light: #afb0d6;
  --clr-accent-mid: #7477ba;
  --clr-accent-dark: #4d4c6f;

  --clr-blue: #6cb4c5;

  --clr-border: #c5c5c5;
  --clr-placeholder: #bcbcbc;

  --clr-success: #92c795;
  --clr-error: #ed1c24;

  /* Font family */
  --font-base: 'Quicksand', sans-serif;

  /* Font sizes */
  /* Step -2: 11.8519px → 12.5px */
  --step--2: clamp(0.7407rem, 0.7287rem + 0.06vw, 0.7813rem);
  /* Step -1: 13.3333px → 15px */
  --step--1: clamp(0.8333rem, 0.8025rem + 0.1543vw, 0.9375rem);
  /* Step 0: 15px → 18px */
  --step-0: clamp(0.9375rem, 0.8819rem + 0.2778vw, 1.125rem);
  /* Step 1: 16.875px → 21.6px */
  --step-1: clamp(1.0547rem, 0.9672rem + 0.4375vw, 1.35rem);
  /* Step 2: 18.9844px → 25.92px */
  --step-2: clamp(1.1865rem, 1.0581rem + 0.6422vw, 1.62rem);
  /* Step 3: 21.3574px → 31.104px */
  --step-3: clamp(1.3348rem, 1.1543rem + 0.9025vw, 1.944rem);
  /* Step 4: 24.0271px → 37.3248px */
  --step-4: clamp(1.5017rem, 1.2554rem + 1.2313vw, 2.3328rem);

  /* Font weights */
  --font-light: 300;
  --font-regular: 400;
  --font-medium: 500;
  --font-bold: 700;
  --font-black: 900;
}

/* Basic reset */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
  border: 1px solid red;
}

/* Prevent font size inflation */
html {
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

body {
  height: 100%;
  line-height: 1.5;
  max-width: 100vw;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: var(--clr-accent-40);
  text-decoration: none;
}

a:not([class]):hover {
  text-decoration: underline;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

svg {
  width: auto;
  height: 2rem;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5lh;
}

/* Focus states */
:focus {
  outline: none;
}
/*




/* Forms */
/* There's a .flow composition, but this prevents forms from having to have that applied where markup is harder to control in certain systems. It still uses the --flow-space variables though to make managing space easier */
form > * + * {
  margin-block-start: var(--flow-space, 1rem);
}

input {
  /* Progressive enhancement */
  accent-color: var(--clr-accent);
}

:is(
    input:not([type='checkbox'], [type='radio'], [type='color']),
    select,
    textarea,
    button
  ) {
  border: 1px solid var(--clr-border);
  background: var(--clr-background, #ffffff);
  color: var(--clr-button, #000000);
  line-height: 1.1;
  height: 3em;
  padding-inline: 1em;
  border-radius: 0.375rem;
  cursor: pointer;
}

/* Composition utility classes */

/* FLOW */

/* More Info: Like the Every Layout stack: https://every-layout.dev/layouts/stack/
	Info about this implementation: https://piccalil.li/blog/my-favourite-3-lines-of-css/
	*/

.flow > * + * {
  margin-block-start: var(--flow-space, 1rem);
}

/********************************/

/* ----------------
Utility Classes
------------------ */
.font-light {
  font-weight: var(--font-light);
}

/* WRAPPER */

/* A common wrapper/container */

.wrapper {
  margin-inline: auto;
  max-width: var(--wrapper-max-width, 50rem);
  padding-inline-start: var(--gutter, 1rem);
  padding-inline-end: var(--gutter, 1rem);
  position: relative;
}

/********************************/

.visually-hidden {
  position: absolute;
  opacity: 0;
  pointer-events: none;
}

/********************************/

/* ----------------
Custom Styles
------------------ */

body {
  color: var(--clr-text);
  font-family: var(--font-base);
}

.grid-container {
  display: grid;
  grid-template-columns: 100%;
  grid-template-rows: auto;
  grid-template-areas:
    'header'
    'navigation'
    'main';
}

header {
  grid-area: header;
}

nav {
  grid-area: navigation;
}

nav img {
  height: 2rem;
}

main {
  display: grid;
  grid-area: main;
}

@media (min-width: 768px) {
  .grid-container {
    grid-template-columns: 3.45rem 1fr;
    grid-template-areas:
      'header header'
      'navigation main';
  }

  main {
    grid-template-columns: 50%;
  }

  .traffic,
  .social {
    grid-column: 1 / span 2;
  }

  .daily,
  .members,
  .message {
    grid-column: 1 / span 1;
  }

  .mobile,
  .activity,
  .settings {
    grid-column: 2 / span 1;
  }
}

@media (min-width: 1024px) {
  main {
    grid-template-columns: 1fr;
  }
}

.widget-container-full,
.widget-container-half {
  width: 95vw;
}

@media (min-width: 768px) {
  .widget-container-full {
    width: 90vw;
  }
  .widget-container-half {
    width: 45vw;
  }
}

/* ----------------
Toggle Switch 
------------------ */
input[type='checkbox'] {
  -webkit-appearance: none;
  position: relative;
  width: 50px;
  height: 30px;
  border-radius: 25px;
  background-color: #ccc;
  transition: background-color 0.3s;
  outline: none;
  cursor: pointer;
}

input::before {
  content: '';
  position: absolute;
  top: 25%;
  left: 10%;
  color: #fff;
}

input::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 30%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  height: 1.25rem;
  width: 1.25rem;
  background-color: white;
  transition: left 0.3s;
}

input:checked {
  background-color: var(--clr-success);
}

input:checked::before {
  content: 'On';
}

input:checked::after {
  left: 70%;
}
